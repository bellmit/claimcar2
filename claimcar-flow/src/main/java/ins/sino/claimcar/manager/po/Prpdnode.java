package ins.sino.claimcar.manager.po;

// Generated by Hibernate Tools 3.2.5 (sinosoft version), Don't modify!
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * POJO Class Prpdnode
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "PRPDNODE")
public class Prpdnode implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private String nodecode;
	private String nodename;
	private String uppernode;
	private Short serialNo;
	private String validStatus;
	private Integer acceptoverminutes;
	private Integer outoverminutes;
	private String nodetype;
	private String remark;
	private Date createTime;
	private String createUser;
	private Date updateTime;
	private String updateUser;

	@Id
	@Column(name = "NODECODE", unique = true, nullable = false, length=30)
	public String getNodecode() {
		return this.nodecode;
	}

	public void setNodecode(String nodecode) {
		this.nodecode = nodecode;
	}

	@Column(name = "NODENAME", nullable = false, length=25)
	public String getNodename() {
		return this.nodename;
	}

	public void setNodename(String nodename) {
		this.nodename = nodename;
	}

	@Column(name = "UPPERNODE", nullable = false, length=25)
	public String getUppernode() {
		return this.uppernode;
	}

	public void setUppernode(String uppernode) {
		this.uppernode = uppernode;
	}

	@Column(name = "SERIALNO", precision=4, scale=0)
	public Short getSerialNo() {
		return this.serialNo;
	}

	public void setSerialNo(Short serialNo) {
		this.serialNo = serialNo;
	}

	@Column(name = "VALIDSTATUS", nullable = false, length=10)
	public String getValidStatus() {
		return this.validStatus;
	}

	public void setValidStatus(String validStatus) {
		this.validStatus = validStatus;
	}

	@Column(name = "ACCEPTOVERMINUTES", precision=6, scale=0)
	public Integer getAcceptoverminutes() {
		return this.acceptoverminutes;
	}

	public void setAcceptoverminutes(Integer acceptoverminutes) {
		this.acceptoverminutes = acceptoverminutes;
	}

	@Column(name = "OUTOVERMINUTES", precision=6, scale=0)
	public Integer getOutoverminutes() {
		return this.outoverminutes;
	}

	public void setOutoverminutes(Integer outoverminutes) {
		this.outoverminutes = outoverminutes;
	}

	@Column(name = "NODETYPE", length=25)
	public String getNodetype() {
		return this.nodetype;
	}

	public void setNodetype(String nodetype) {
		this.nodetype = nodetype;
	}

	@Column(name = "REMARK", length=10)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CREATETIME", nullable = false, length=7)
	public Date getCreateTime() {
		return this.createTime;
	}

	public void setCreateTime(Date createTime) {
		this.createTime = createTime;
	}

	@Column(name = "CREATEUSER", nullable = false, length=25)
	public String getCreateUser() {
		return this.createUser;
	}

	public void setCreateUser(String createUser) {
		this.createUser = createUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATETIME", nullable = false, length=7)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "UPDATEUSER", nullable = false, length=25)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}
}

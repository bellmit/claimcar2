package ins.sino.claimcar.flow.po;

// Generated by Hibernate Tools 3.2.5 (sinosoft version), Don't modify!
import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * POJO Class PrpLWfNode
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@TableGenerator(name = "utiSequence", table = "UTISEQUENCE", pkColumnName = "GenName", valueColumnName = "GenValue", pkColumnValue = "PRPLWFNODE_PK", allocationSize = 2)
@Table(name = "PRPLWFNODE", uniqueConstraints = @UniqueConstraint(columnNames={"FLOWID", "NODECODE"}) 
)
public class PrpLWfNode implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private BigDecimal id;
	private String flowId;
	private String nodeCode;
	private String nodeName;
	private String handlerStatus;
	private Date nodeInTime;
	private Date nodeOutTime;
	private Date updateTime;
	private String updateUser;
	private Date cancelTime;
	private String cancelUser;

	@Id
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "utiSequence")
	@Column(name = "ID", unique = true, nullable = false, scale=0)
	public BigDecimal getId() {
		return this.id;
	}

	public void setId(BigDecimal id) {
		this.id = id;
	}

	@Column(name = "NODECODE", nullable = false, length=50)
	public String getNodeCode() {
		return this.nodeCode;
	}

	public void setNodeCode(String nodeCode) {
		this.nodeCode = nodeCode;
	}

	@Column(name = "NODENAME", nullable = false, length=50)
	public String getNodeName() {
		return this.nodeName;
	}

	public void setNodeName(String nodeName) {
		this.nodeName = nodeName;
	}

	@Column(name = "HANDLERSTATUS", nullable = false, length = 10)
	public String getHandlerStatus() {
		return this.handlerStatus;
	}

	public void setHandlerStatus(String handlerStatus) {
		this.handlerStatus = handlerStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "NODEINTIME", length=7)
	public Date getNodeInTime() {
		return this.nodeInTime;
	}

	public void setNodeInTime(Date nodeInTime) {
		this.nodeInTime = nodeInTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "NODEOUTTIME", length=7)
	public Date getNodeOutTime() {
		return this.nodeOutTime;
	}

	public void setNodeOutTime(Date nodeOutTime) {
		this.nodeOutTime = nodeOutTime;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "UPDATETIME", length=7)
	public Date getUpdateTime() {
		return this.updateTime;
	}

	public void setUpdateTime(Date updateTime) {
		this.updateTime = updateTime;
	}

	@Column(name = "UPDATEUSER", length=10)
	public String getUpdateUser() {
		return this.updateUser;
	}

	public void setUpdateUser(String updateUser) {
		this.updateUser = updateUser;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "CANCELTIME", length=7)
	public Date getCancelTime() {
		return this.cancelTime;
	}

	public void setCancelTime(Date cancelTime) {
		this.cancelTime = cancelTime;
	}

	@Column(name = "CANCELUSER", length=10)
	public String getCancelUser() {
		return this.cancelUser;
	}

	public void setCancelUser(String cancelUser) {
		this.cancelUser = cancelUser;
	}

	@Column(name = "FLOWID", nullable = false, length = 25)
	public String getFlowId() {
		return flowId;
	}

	public void setFlowId(String flowId) {
		this.flowId = flowId;
	}
}

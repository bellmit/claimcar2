package ins.sino.claimcar.losscar.po;

// Generated by Hibernate Tools 3.2.5 (sinosoft version), Don't modify!

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.TableGenerator;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * POJO Class PrpLLossRepairSumInfo
 */
@Entity
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
@TableGenerator(name = "utiSequence", table = "UTISEQUENCE", pkColumnName = "GenName", valueColumnName = "GenValue", pkColumnValue = "PRPLLOSSRULE_PK", allocationSize = 10)
@Table(name = "PRPLLOSSRULE")
public class PrplLossRule implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private Long id;
	private PrpLDlossCarMain prpLDlossCarMain;
	private Integer reportAllRuleScore;
	private Integer evalAllRuleScore;
	private Integer evalRuleNumbers;
	private Integer pointRuleNumbers;
	private PrplLossRuleSub prplLossRuleSub;
	
	@Id
	@GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "prpLDlossCarMain"))
	@GeneratedValue(generator = "generator")
	@Column(name = "ID", unique = true, nullable = false, precision=12, scale=0)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@PrimaryKeyJoinColumn
	public PrpLDlossCarMain getPrpLDlossCarMain() {
		return this.prpLDlossCarMain;
	}

	public void setPrpLDlossCarMain(PrpLDlossCarMain prpLDlossCarMain) {
		this.prpLDlossCarMain = prpLDlossCarMain;
	}

	@Column(name = "REPORTALLRULESCORE", length=10)
	public Integer getReportAllRuleScore() {
		return reportAllRuleScore;
	}

	public void setReportAllRuleScore(Integer reportAllRuleScore) {
		this.reportAllRuleScore = reportAllRuleScore;
	}
	
	@Column(name = "EVALALLRULESCORE", length=10)
	public Integer getEvalAllRuleScore() {
		return evalAllRuleScore;
	}

	public void setEvalAllRuleScore(Integer evalAllRuleScore) {
		this.evalAllRuleScore = evalAllRuleScore;
	}
	
	@Column(name = "EVALRULENUMBERS", length=10)
	public Integer getEvalRuleNumbers() {
		return evalRuleNumbers;
	}

	public void setEvalRuleNumbers(Integer evalRuleNumbers) {
		this.evalRuleNumbers = evalRuleNumbers;
	}

	@Column(name = "POINTRULENUMBERS", length=10)
	public Integer getPointRuleNumbers() {
		return pointRuleNumbers;
	}

	public void setPointRuleNumbers(Integer pointRuleNumbers) {
		this.pointRuleNumbers = pointRuleNumbers;
	}

	@OneToOne(cascade=CascadeType.ALL, fetch=FetchType.LAZY, mappedBy="prplLossRule")
	public PrplLossRuleSub getPrplLossRuleSub() {
		return prplLossRuleSub;
	}

	public void setPrplLossRuleSub(PrplLossRuleSub prplLossRuleSub) {
		this.prplLossRuleSub = prplLossRuleSub;
	}
	
}

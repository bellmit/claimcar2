package ins.sino.claimcar.regist.po;

// Generated by Hibernate Tools 3.2.5 (sinosoft version), Don't modify!
import javax.persistence.Column;
import javax.persistence.Embeddable;

/**
 * POJO Class PrpcinsuredId
 */
@Embeddable
public class PrpCengageId implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private String policyNo;
	private Long serialNo;
	private Long lineNo;
	
	@Column(name = "POLICYNO", nullable = false, length=22)
	public String getPolicyNo() {
		return this.policyNo;
	}

	public void setPolicyNo(String policyNo) {
		this.policyNo = policyNo;
	}

	@Column(name = "SERIALNO", nullable = false, precision=15, scale=0)
	public Long getSerialNo() {
		return this.serialNo;
	}

	public void setSerialNo(Long serialNo) {
		this.serialNo = serialNo;
	}
	
	
	@Column(name = "LINENO", nullable = false, precision=15, scale=0)
	public Long getLineNo() {
		return lineNo;
	}

	public void setLineNo(Long lineNo) {
		this.lineNo = lineNo;
	}

	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		
		if (!(other instanceof PrpCengageId)) {
			return false;
		}
		PrpCengageId castOther = (PrpCengageId) other;  
		return ( (this.getPolicyNo()==castOther.getPolicyNo()) || ( this.getPolicyNo()!=null && castOther.getPolicyNo()!=null && this.getPolicyNo().equals(castOther.getPolicyNo()) ) )
 && ( (this.getSerialNo()==castOther.getSerialNo()) || ( this.getSerialNo()!=null && castOther.getSerialNo()!=null && this.getSerialNo().equals(castOther.getSerialNo()) ) )
  && ( (this.getLineNo()==castOther.getLineNo()) || ( this.getLineNo()!=null && castOther.getLineNo()!=null && this.getLineNo().equals(castOther.getLineNo()) ));
	}
   
	public int hashCode() {
		int result = 17;         
		result = 37 * result + ( getPolicyNo() == null ? 0 : this.getPolicyNo().hashCode() );
		result = 37 * result + ( getSerialNo() == null ? 0 : this.getSerialNo().hashCode() );
		result = 37 * result + ( getLineNo() == null ? 0 : this.getLineNo().hashCode() );
		return result;
   }   
}

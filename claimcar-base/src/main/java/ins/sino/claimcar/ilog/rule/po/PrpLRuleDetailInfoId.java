package ins.sino.claimcar.ilog.rule.po;

// Generated by Hibernate Tools 3.2.5 (sinosoft version), Don't modify!
import javax.persistence.Column;
import javax.persistence.Embeddable;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * POJO Class PrpLRuleDetailInfoId
 */
@Embeddable
public class PrpLRuleDetailInfoId implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	private String ruleId;
	private int serialNo;
	private String ruleNode;

	@Column(name = "RULEID", nullable = false, length=50)
	public String getRuleId() {
		return this.ruleId;
	}

	public void setRuleId(String ruleId) {
		this.ruleId = ruleId;
	}

	@Column(name = "SERIALNO", nullable = false, precision=4, scale=0)
	public int getSerialNo() {
		return this.serialNo;
	}

	public void setSerialNo(int serialNo) {
		this.serialNo = serialNo;
	}

	@Column(name = "RULENODE", nullable = false, length=10)
	public String getRuleNode() {
		return this.ruleNode;
	}

	public void setRuleNode(String ruleNode) {
		this.ruleNode = ruleNode;
	}
	public boolean equals(Object other) {
		if ((this == other)) {
			return true;
		}
		if ((other == null)) {
			return false;
		}
		
		if (!(other instanceof PrpLRuleDetailInfoId)) {
			return false;
		}
		PrpLRuleDetailInfoId castOther = (PrpLRuleDetailInfoId) other;  
		return ( (this.getRuleId()==castOther.getRuleId()) || ( this.getRuleId()!=null && castOther.getRuleId()!=null && this.getRuleId().equals(castOther.getRuleId()) ) )
 && (this.getSerialNo()==castOther.getSerialNo())
 && ( (this.getRuleNode()==castOther.getRuleNode()) || ( this.getRuleNode()!=null && castOther.getRuleNode()!=null && this.getRuleNode().equals(castOther.getRuleNode()) ) );
	}
   
	public int hashCode() {
		int result = 17;         
		result = 37 * result + ( getRuleId() == null ? 0 : this.getRuleId().hashCode() );
		result = 37 * result + this.getSerialNo();
		result = 37 * result + ( getRuleNode() == null ? 0 : this.getRuleNode().hashCode() );
		return result;
   }   
}
